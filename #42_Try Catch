يواا سفيان 🔥 دخلنا دابا لعالم **التعامل مع الأخطاء (Exceptions)** فـ C++ باستعمال:

# 🔷 `try` – `catch` في C++

---

## ✅ علاش كنستعمل try-catch؟

باش نتحكم فالأخطاء اللي تقدر توقع أثناء تشغيل البرنامج، بلا ما يطيح كامل ⚠️  
مثلاً: قسمة على 0، وصول لمكان خارج حدود المصفوفة، فتح ملف ما كاينش...

---

## ✅ البنية العامة:

```cpp
try {
    // الكود لي ممكن يوقع فيه خطأ
} catch (نوع_الخطأ e) {
    // كيفاش نتعامل مع الخطأ
}
```

---

## ✅ مثال بسيط:

```cpp
#include <iostream>
using namespace std;

int main() {
    int x, y;
    cout << "أدخل رقمين (x/y): ";
    cin >> x >> y;

    try {
        if (y == 0)
            throw "قسمة على صفر غير مسموحة!";
        
        cout << "النتيجة: " << x / y << endl;
    } catch (const char* msg) {
        cout << "خطأ: " << msg << endl;
    }

    return 0;
}
```

📤 **الناتج (لو y = 0):**  
`خطأ: قسمة على صفر غير مسموحة!`

---

## ✅ `throw` تعني "رمي استثناء"

يمكنك ترمي:

| اللي كترميه     | النوع في catch          |
|-----------------|--------------------------|
| رقم (`int`)     | `catch(int e)`           |
| نص (`char*`)    | `catch(const char* e)`   |
| كائن (`object`) | `catch(MyException e)`   |

---

## ✅ مثال مع `vector.at()`:

```cpp
#include <iostream>
#include <vector>
using namespace std;

int main() {
    vector<int> v = {1, 2, 3};

    try {
        cout << v.at(5);  // خطأ! خارج النطاق
    } catch (out_of_range& e) {
        cout << "خطأ: " << e.what() << endl;
    }

    return 0;
}
```

📤 **الناتج:**  
`خطأ: vector::_M_range_check: __n (which is 5) >= this->size() (which is 3)`

---

## 🔥 ملاحظات مهمة:

| الخاصية              | المعلومة                             |
|----------------------|----------------------------------------|
| `try`                | كتكتب فيها الكود اللي فيه الخطر         |
| `catch`              | كتكتب فيها كيفاش تتعامل مع الخطأ       |
| `throw`              | كتطلق الاستثناء                       |
| `e.what()`           | كتطبع رسالة الخطأ للكائنات             |
| ممكن تستخدم أكثر من `catch` | حسب نوع الخطأ                   |

---

## ✅ أكثر من `catch`:

```cpp
try {
    // ...
} catch (int x) {
    cout << "خطأ من نوع int: " << x;
} catch (const char* msg) {
    cout << "رسالة خطأ: " << msg;
}
```

---

