جميل سفيان! خلينا الآن نتكلم عن **المتغيرات التلقائية (Automatic Variables)** في C++، ونقارنها مع المتغيرات `static`.

---

## 🔹 ما هي **المتغيرات التلقائية (Automatic Variables)**؟

### 📌 التعريف البسيط:
المتغيرات التلقائية هي المتغيرات **العادية** التي نعلن عنها داخل دالة أو بلوك كود، **بدون استخدام `static` أو `extern` أو أي شيء خاص**.

### ✳️ الكلمة المفتاحية `auto` موجودة، لكنها موضوع مختلف (C++11)، أما هنا فنحن نقصد **السلوك التلقائي** للمتغيرات.

---

## ✅ مثال:

```cpp
#include <iostream>
using namespace std;

void show() {
    int x = 0;  // هذا متغير تلقائي
    x++;
    cout << x << endl;
}

int main() {
    show(); // 1
    show(); // 1
    show(); // 1
}
```

### 🔍 التفسير:
- كل مرة تدخل الدالة `show()`، يتم إنشاء المتغير `x` في الذاكرة.
- وعند الخروج من الدالة، يتم تدمير المتغير.
- في كل استدعاء، يبدأ من الصفر.

---

## ⚙️ الخصائص العامة للمتغير التلقائي:

| الخاصية             | القيمة                                  |
|---------------------|------------------------------------------|
| **الكلمة المفتاحية** | لا حاجة لاستخدام أي كلمة (مخفية)         |
| **العمر (lifetime)** | يتم إنشاؤه عند دخول البلوك (مثل الدالة) ويُحذف عند الخروج |
| **المجال (scope)**   | محصور داخل البلوك أو الدالة              |
| **قيمة ابتدائية؟**   | غير مهيأ تلقائيًا (يحمل قمامة في الذاكرة إن لم تهيئه) |

---

## 🆚 مقارنة بين `automatic` و `static`

| المقارنة           | automatic                | static                                |
|--------------------|--------------------------|----------------------------------------|
| العمر              | لحين الخروج من البلوك    | يبقى طول عمر البرنامج                  |
| التهيئة            | كل مرة من جديد           | مرة واحدة فقط                          |
| القيمة تبقى؟       | لا                        | نعم                                    |

---

## 🧠 ملاحظة إضافية:

لو كتبت هذا:

```cpp
int a = 5;
```

فأنت فعليًا تكتب متغير **تلقائي (automatic)** حتى لو لم تستخدم الكلمة `auto`.  
C++ تعتبر كل متغير داخل دالة بدون `static` أو `extern` هو تلقائي.

---
