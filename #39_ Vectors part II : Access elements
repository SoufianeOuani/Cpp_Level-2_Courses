تمام سفيان! 🔥 دابا ندوزو للجزء الثاني من **`vectors`** فـ C++:  
# 🔷 Accessing Elements – الوصول إلى عناصر الـ `vector`

---

## ✅ أولاً: تذكير سريع

```cpp
#include <vector>
using namespace std;

vector<int> nums = {10, 20, 30, 40};
```

---

## 🔹 1. باستخدام `[]` (مثل المصفوفات)

```cpp
cout << nums[0];  // ➜ 10
```

🔸 ✅ سريع وسهل  
🔸 ❗ لا يتحقق من الحدود (no bounds checking)

---

## 🔹 2. باستخدام `.at(index)`

```cpp
cout << nums.at(2);  // ➜ 30
```

🔸 ✅ أكثر أمانًا  
🔸 ❗ يعطيك خطأ لو خرّجت على الحدود (out of range exception)

مثال:

```cpp
cout << nums.at(100);  // ❌ runtime error: out_of_range
```

---

## 🔹 3. الوصول لأول وآخر عنصر

```cpp
cout << nums.front();  // ➜ 10
cout << nums.back();   // ➜ 40
```

---

## 🔹 4. تعديل العناصر

```cpp
nums[1] = 200;
nums.at(3) = 400;
```

---

## ✅ مثال كامل:

```cpp
#include <iostream>
#include <vector>
using namespace std;

int main() {
    vector<int> v = {5, 10, 15, 20};

    cout << "v[0]: " << v[0] << endl;
    cout << "v.at(1): " << v.at(1) << endl;
    cout << "Front: " << v.front() << endl;
    cout << "Back: " << v.back() << endl;

    v[2] = 99;
    v.at(3) = 88;

    cout << "بعد التعديل:\n";
    for (int i = 0; i < v.size(); i++) {
        cout << v[i] << " ";
    }

    return 0;
}
```

---

## ⚠️ ملاحظات سريعة:

| الطريقة         | آمنة؟ | سريعة؟ | يعطي خطأ خارج النطاق؟ |
|----------------|--------|---------|--------------------------|
| `[]`           | ❌     | ✅      | ❌ (silent bug)          |
| `.at()`        | ✅     | أقل سرعة | ✅ (runtime error)       |

---

