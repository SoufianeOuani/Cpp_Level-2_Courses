أكيد سفيان! 😎  
الـ **Bitwise AND** هو واحد من أهم العمليات اللي كتخدم على مستوى الـ **bits** (التمثيل الثنائي للأعداد).

---

### 🔹 الرمز: `&`

الـ `&` كيدير مقارنة bit بـ bit بين عددين، وكيعطي `1` فقط إذا كان **الـ bit في العددين معًا = 1**.

---

### ✅ مثال بسيط:

```cpp
int a = 5;   // 0101 in binary
int b = 3;   // 0011 in binary

int result = a & b;

cout << result << endl;  // الناتج: 1 => 0001
```

---

### 🔍 كيفاش خدمها:

| bit في a | bit في b | AND |
|----------|----------|-----|
|    0     |    0     |  0  |
|    1     |    1     |  1  |
|    0     |    1     |  0  |
|    1     |    1     |  1  |

النتيجة هي: `0001` → أي 1 بالعشري.

---

### 🧠 استخدامات شائعة:

1. **التحقق من bit معين**:
   ```cpp
   if ((number & (1 << bitIndex)) != 0) {
       // الـ bit مفعّل
   }
   ```

2. **إطفاء bit معين**:
   ```cpp
   number &= ~(1 << bitIndex);
   ```

3. **التحقق من الزوجية/الفردية**:
   ```cpp
   if (number & 1)
       cout << "Odd";
   else
       cout << "Even";
   ```

---
